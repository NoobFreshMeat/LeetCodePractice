/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode *ptr1 = headA;
        ListNode *ptr2 = headB;
        
        if (!headA || !headB) return NULL;
        
        while (ptr1 != ptr2)
        {
            //if two cycle meet on NULL, two list don't have intersection.
            //if two cycle meet on a node, this node is the answer.
            ptr1 = ptr1 ? ptr1->next : headB;
            ptr2 = ptr2 ? ptr2->next : headA;
        }
        return ptr1;
    }
};
