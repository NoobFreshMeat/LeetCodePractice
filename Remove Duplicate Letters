/* greedy solution 
make the most left char as the smallest letter
every recursion handle one left most letter*/
class Solution {
public:
    string removeDuplicateLetters(string s) {
        int cnt[26];
        int pos = 0;
        //string res;
        for (int i = 0; i < s.size(); i++)
        {
            ++cnt[s[i] - 'a'];
        }
        
        for (int j = 0; j < s.size(); j++)
        {
            if (s[j] < s[pos]) pos = j;
            if (--cnt[s[j] - 'a'] == 0) break;
        }
        if (s.size() == 0) return "";
        string tempstr = s.substr(pos + 1);
        tempstr.erase(std::remove(tempstr.begin(), tempstr.end(), s[pos]), tempstr.end());
        //return res + s[pos];
        return s[pos] + removeDuplicateLetters(tempstr);
    }
};
