/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if (!head) return NULL;
        
        ListNode* ptr1 = head;
        ListNode* ptr2 = head;
        ListNode* ptr3 = head;
        
        while (ptr1 != NULL && ptr2 != NULL)
        {
            ptr1 = ptr1->next;
            if (!ptr2->next) return NULL;
            ptr2 = ptr2->next->next;
            
            if ((ptr1 == ptr2) && ptr1 && ptr2)
            {
                while (ptr3 != ptr1)
                {
                    ptr1 = ptr1->next;
                    ptr3 = ptr3->next;
                }
                return ptr1;
            }
        }
        return NULL;
    }
};
